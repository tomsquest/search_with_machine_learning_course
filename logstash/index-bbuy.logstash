input {
  file {
#    path => ["/home/tom/Dev/search_with_machine_learning_course/products_sample.xml"]
    path => ["/home/tom/Dev/search_with_machine_learning_course/product_data/products/*.xml"]
    mode => "read"
    exit_after_read => true
    file_completed_action => "log"
    file_completed_log_path => "/dev/null"
    file_chunk_size => 100000000
    sincedb_path => "/dev/null"
      codec => multiline {
      pattern => "<product>"
      negate => "true"
      what => "previous"
    }
  }
}
filter {
  xml {
    source => "message"
    target => "xml_doc"
    store_xml => "false"
    xpath => [
      "/product/productId/text()", "productId",
      "/product/sku/text()", "sku",
      "/product/name/text()", "name",
      "/product/type/text()", "type",
      "/product/startDate/text()", "startDate",
      "/product/active/text()", "active",
      "/product/regularPrice/text()", "regularPrice",
      "/product/salePrice/text()", "salePrice",
      "/product/onSale/text()", "onSale",
      "/product/digital/text()", "digital",
      "/product/frequentlyPurchasedWith/*/text()", "frequentlyPurchasedWith",
      "/product/accessories/*/text()", "accessories",
      "/product/relatedProducts/*/text()", "relatedProducts",
      "/product/crossSell/text()", "crossSell",
      "/product/salesRankShortTerm/text()", "salesRankShortTerm",
      "/product/salesRankMediumTerm/text()", "salesRankMediumTerm",
      "/product/salesRankLongTerm/text()", "salesRankLongTerm",
      "/product/bestSellingRank/text()", "bestSellingRank",
      "/product/url/text()", "url",
      "/product/categoryPath/*/name/text()", "categoryPath",
      "/product/categoryPath/*/id/text()", "categoryPathIds",
      "/product/categoryPath/category[last()]/id/text()", "categoryLeaf",
      "count(/product/categoryPath/*/name)", "categoryPathCount",
      "/product/customerReviewCount/text()", "customerReviewCount",
      "/product/customerReviewAverage/text()", "customerReviewAverage",
      "/product/inStoreAvailability/text()", "inStoreAvailability",
      "/product/onlineAvailability/text()", "onlineAvailability",
      "/product/releaseDate/text()", "releaseDate",
      "/product/shippingCost/text()", "shippingCost",
      "/product/shortDescription/text()", "shortDescription",
      "/product/shortDescriptionHtml/text()", "shortDescriptionHtml",
      "/product/class/text()", "class",
      "/product/classId/text()", "classId",
      "/product/subclass/text()", "subclass",
      "/product/subclassId/text()", "subclassId",
      "/product/department/text()", "department",
      "/product/departmentId/text()", "departmentId",
      "/product/bestBuyItemId/text()", "bestBuyItemId",
      "/product/description/text()", "description",
      "/product/manufacturer/text()", "manufacturer",
      "/product/modelNumber/text()", "modelNumber",
      "/product/image/text()", "image",
      "/product/condition/text()", "condition",
      "/product/inStorePickup/text()", "inStorePickup",
      "/product/homeDelivery/text()", "homeDelivery",
      "/product/quantityLimit/text()", "quantityLimit",
      "/product/color/text()", "color",
      "/product/depth/text()", "depth",
      "/product/height/text()", "height",
      "/product/weight/text()", "weight",
      "/product/shippingWeight/text()", "shippingWeight",
      "/product/width/text()", "width",
      "/product/longDescription/text()", "longDescription",
      "/product/longDescriptionHtml/text()", "longDescriptionHtml",
      "/product/features/*/text()", "features"
    ]
  }
  mutate {
    remove_field => ["message", "host", "path", "@version", "@timestamp"]
  }
  if ![productId] {
    drop{}
  }
}
output {
#  stdout {}
  opensearch {
    hosts => ["https://localhost:9200"]
    index => "bbuy_products"
    user => "admin"
    password => "admin"
    ssl_certificate_verification => false
    document_id => "%{sku}"
  }
}
